"""Added Agent, Booking, Client, Commission, HajjPackage, Note and PaymentTransaction tables.

Revision ID: 7639e100398c
Revises: 2b7380507a71
Create Date: 2025-09-18 11:26:19.909972

"""

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "7639e100398c"
down_revision = "2b7380507a71"
branch_labels = None
depends_on = None


def upgrade() -> None:
    """Run the migration."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "agents",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("first_name", sa.String(length=100), nullable=True),
        sa.Column("last_name", sa.String(length=100), nullable=True),
        sa.Column("other_name", sa.String(length=100), nullable=True),
        sa.Column(
            "sex",
            sa.Enum("MALE", "FEMALE", "OTHER", name="genderenum"),
            nullable=True,
        ),
        sa.Column("phone_number", sa.String(length=30), nullable=True),
        sa.Column("bank_name", sa.String(length=120), nullable=True),
        sa.Column("account_number", sa.String(length=50), nullable=True),
        sa.Column("agent_code", sa.String(length=50), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("agent_code"),
    )
    op.create_table(
        "hajj_packages",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("year", sa.Integer(), nullable=False),
        sa.Column("local_price", sa.Integer(), nullable=False),
        sa.Column("diaspora_price", sa.Integer(), nullable=False),
        sa.Column("registration_fee", sa.Integer(), nullable=False),
        sa.Column("commission_amount", sa.Integer(), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "clients",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("first_name", sa.String(length=100), nullable=False),
        sa.Column("last_name", sa.String(length=100), nullable=False),
        sa.Column("other_name", sa.String(length=100), nullable=True),
        sa.Column(
            "sex",
            sa.Enum("MALE", "FEMALE", "OTHER", name="genderenum"),
            nullable=False,
        ),
        sa.Column("phone_number", sa.String(length=30), nullable=False),
        sa.Column("passport_number", sa.String(length=100), nullable=False),
        sa.Column("date_of_birth", sa.Date(), nullable=True),
        sa.Column(
            "location",
            sa.Enum("NG", "UK", "US", "CA", name="countryenum"),
            nullable=False,
        ),
        sa.Column("referee_id", sa.UUID(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["referee_id"],
            ["agents.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("passport_number"),
    )
    op.create_table(
        "bookings",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("client_id", sa.UUID(), nullable=False),
        sa.Column("package_id", sa.UUID(), nullable=False),
        sa.Column("agent_id", sa.UUID(), nullable=True),
        sa.Column(
            "travelling_from",
            sa.Enum("NG", "UK", "US", "CA", name="countryenum"),
            nullable=True,
        ),
        sa.Column(
            "status",
            sa.Enum(
                "REGISTERED",
                "COMPLETED",
                "CANCELLED",
                "MOVED",
                name="bookingstatusenum",
            ),
            nullable=False,
        ),
        sa.Column("moved_to_booking_id", sa.UUID(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["agent_id"],
            ["agents.id"],
        ),
        sa.ForeignKeyConstraint(
            ["client_id"],
            ["clients.id"],
        ),
        sa.ForeignKeyConstraint(
            ["moved_to_booking_id"],
            ["bookings.id"],
        ),
        sa.ForeignKeyConstraint(
            ["package_id"],
            ["hajj_packages.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "notes",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("client_id", sa.UUID(), nullable=False),
        sa.Column("content", sa.Text(), nullable=False),
        sa.Column("created_by", sa.UUID(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["client_id"],
            ["clients.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "commissions",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("agent_id", sa.UUID(), nullable=False),
        sa.Column("booking_id", sa.UUID(), nullable=False),
        sa.Column("commission_amount", sa.Integer(), nullable=False),
        sa.Column(
            "status",
            sa.Enum("PENDING", "PAID", name="commissionstatusenum"),
            nullable=False,
        ),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["agent_id"],
            ["agents.id"],
        ),
        sa.ForeignKeyConstraint(
            ["booking_id"],
            ["bookings.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "payment_transactions",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("booking_id", sa.UUID(), nullable=False),
        sa.Column("amount", sa.Integer(), nullable=False),
        sa.Column(
            "payment_type",
            sa.Enum("REGISTRATION", "INSTALLMENT", name="paymenttypeenum"),
            nullable=False,
        ),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["booking_id"],
            ["bookings.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.alter_column(
        "dummy_model",
        "name",
        existing_type=sa.VARCHAR(length=200),
        nullable=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Undo the migration."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "dummy_model",
        "name",
        existing_type=sa.VARCHAR(length=200),
        nullable=True,
    )
    op.drop_table("payment_transactions")
    op.drop_table("commissions")
    op.drop_table("notes")
    op.drop_table("bookings")
    op.drop_table("clients")
    op.drop_table("hajj_packages")
    op.drop_table("agents")
    # ### end Alembic commands ###
